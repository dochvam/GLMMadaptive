library("MASS")
library("GLMMadaptive")

source("./R/Functions.R")
source("./R/Fit_Funs.R")
source("./R/mixed_fit.R")
source("./R/mixed_model.R")
source("./R/methods.R")

#source("./R/hello.R")

library("GLMMadaptive")

##########################################################################################

##############
# Fit models #
##############

fm1 <- mixed_model(fixed = y ~ year + group, random = ~ 1 | id, data = DF,
                   family = binomial())

fixef(fm1)
summary(fm1)
marginal_coefs(fm1)

fm2 <- mixed_model(fixed = y ~ year + group, random = ~ year | id, data = DF,
                   family = binomial(), verbose = TRUE, nAGQ = 15)

fixef(fm2)
summary(fm2)
marginal_coefs(fm2)

marginal_coefs(fm2, std_errors = TRUE)


confint(fm2)

ranef(fm2)

logLik(fm2)
vcov(fm2)

fitted(fm2, type = "mean_subject")
fitted(fm2, type = "subject_specific")
fitted(fm2, type = "marginal")

anova(fm1, fm2)

anova(fm2, L = rbind(c(0, 1, 0), c(0, 0, 1)))

nDF <- with(DF, expand.grid(year = seq(min(year), max(year), length = 15),
                            group = levels(group)))

plot_data <- effectPlotData(fm2, nDF)
plot_data_m <- effectPlotData(fm2, nDF, marginal = TRUE)



library("lattice")
xyplot(pred + low + upp ~ year | group, data = plot_data,
       type = "l", lty = c(1, 2, 2), col = c(2, 1, 1), lwd = 2)

expit <- function (x) exp(x) / (1 + exp(x))
xyplot(expit(pred) + expit(low) + expit(upp) ~ year | group, data = plot_data,
       type = "l", lty = c(1, 2, 2), col = c(2, 1, 1), lwd = 2)

xyplot(expit(pred) + expit(low) + expit(upp) ~ year | group, data = plot_data_m,
       type = "l", lty = c(1, 2, 2), col = c(2, 1, 1), lwd = 2)


##########################################################################################

# Negative Binomial

# simulate some data
set.seed(101)
dd <- expand.grid(f1 = factor(1:3), f2 = LETTERS[1:2], g = 1:30, rep = 1:15,
                  KEEP.OUT.ATTRS = FALSE)
mu <- 5*(-4 + with(dd, as.integer(f1) + 4 * as.numeric(f2)))
dd$y <- rnbinom(nrow(dd), mu = mu, size = 0.5)

gm <-  mixed_model(fixed = y ~ f1 * f2, random = ~ 1 | g, data = dd, 
                   family = negative.binomial(0.5), verbose = TRUE, iter_EM = 200)

summary(gm)

fm <-  mixed_model(fixed = y ~ f1 * f2, random = ~ 1 | g, data = dd, 
                   family = poisson())

summary(fm)


my_negBinom <- function (link = "log") {
    stats <- make.link(link)
    log_dens <- function (y, eta, mu_fun, phis) {
        # the log density function
        phis <- exp(phis)
        mu <- mu_fun(eta)
        log_mu_phis <- log(mu + phis)
        comp1 <- lgamma(y + phis) - lgamma(phis) - lgamma(y + 1)
        comp2 <- phis * log(phis) - phis * log_mu_phis
        comp3 <- y * log(mu) - y * log_mu_phis
        out <- comp1 + comp2 + comp3
        attr(out, "mu_y") <- mu
        out
    }
    score_eta_fun <- function (y, mu, phis) {
        # the derivative of the log density w.r.t. mu
        phis <- exp(phis)
        mu_phis <- mu + phis
        comp2 <- - phis / mu_phis
        comp3 <- y / mu - y / mu_phis
        # the derivative of mu w.r.t. eta
        mu.eta <- mu
        (comp2 + comp3) * mu.eta
    }
    score_phis_fun <- function (y, mu, phis) {
        phis <- exp(phis)
        mu_phis <- mu + phis
        comp1 <- digamma(y + phis) - digamma(phis)
        comp2 <- log(phis) + 1 - log(mu_phis) - phis / mu_phis
        comp3 <- - y / mu_phis
        comp1 + comp2 + comp3
    }
    structure(list(family = "user Neg Binom", link = stats$name, linkfun = stats$linkfun,
                   linkinv = stats$linkinv, log_dens = log_dens,
                   score_eta_fun = score_eta_fun,
                   score_phis_fun = score_phis_fun),
              class = "family")
}

fm <-  mixed_model(fixed = y ~ f1 * f2, random = ~ 1 | g, data = dd, 
                   family = my_negBinom(), n_phis = 1, 
                   initial_values = list("betas" = poisson()))


summary(fm)


##########################################################################################

data("cbpp", package = "lme4")
library("lme4")
system.time(fm1 <- glmer(cbind(incidence, size - incidence) ~ period + (1 | herd),
             data = cbpp, family = binomial, nAGQ = 21))

system.time(gm1 <- mixed_model(cbind(incidence, size - incidence) ~ period, random = ~ 1 | herd,
                   data = cbpp, family = binomial(), nAGQ = 21))


summary(fm1)
summary(gm1)


fixed = cbind(incidence, size - incidence) ~ period
random = ~ 1 | herd
data = cbpp
control = list()
family = binomial(link = "probit")
initial_values = NULL
na.action = na.exclude





