library("rbenchmark")
source("./R/Functions.R")
source("./R/Fit_Funs.R")
source("./R/hello.R")


system.time(fm1 <- mixed_model(fixed = y ~ year + group, random = ~ 1 | id, data = DF,
                               family = binomial(), nAGQ = 15))

system.time(fm2 <- mixed_model(fixed = y ~ year + group, random = ~ 1 | id, data = DF,
                               family = binomial(), nAGQ = 15))

system.time(fm3 <- mixed_model(fixed = y ~ ns(year, 2) * group, random = ~ 1 | id, data = DF,
                               family = binomial(), nAGQ = 15))


system.time(gm1 <- mixed_model(fixed = y ~ year + group, random = ~ 1 | id, data = DF,
                               log_dens_fun = binomial_log_dens, mu_fun = plogis,
                               score_eta_fun = function (y, mu, phis) y - mu, nAGQ = 15))

system.time(km1 <- mixed_model(fixed = y ~ year + group, random = ~ 1 | id, data = DF,
                               log_dens_fun = binomial_log_dens, mu_fun = plogis,
                               nAGQ = 15))


log_dens <- function (y, eta, mu_fun, phis) {
    phis <- exp(phis)
    mu <- mu_fun(eta)
    log_mu_phis <- log(mu + phis)
    comp1 <- lgamma(y + phis) - lgamma(phis) - lgamma(y + 1)
    comp2 <- phis * log(phis) - phis * log_mu_phis
    comp3 <- y * log(mu) - y * log_mu_phis
    out <- comp1 + comp2 + comp3
    attr(out, "mu_y") <- mu
    out
}

set.seed(101)
dd <- expand.grid(f1 = factor(1:3),
                  f2 = LETTERS[1:2], g=1:9, rep=1:15,
                  KEEP.OUT.ATTRS=FALSE)
mu <- 5*(-4 + with(dd, as.integer(f1) + 4*as.numeric(f2)))
dd$y <- rnbinom(nrow(dd), mu = mu, size = 0.5)

betas = coef((glm.nb(y ~ f1*f2, data=dd, trace=TRUE)))

system.time(gm2 <- mixed_model(fixed = y ~ f1 * f2, random = ~ 1 | g, data = dd,
                               family = negative.binomial(0.5), n_phis = 1, iter_EM = 200, nAGQ = 15))

summary(gm2)
MASS::negative.binomial


anova(fm, fm2)

anova(fm2, fm3)


fixed = y ~ year + group
random = ~ year | id
data = DF
control = list()
family = binomial()
initial_values = NULL
na.action = na.exclude

control = con
initial_values = inits

fixed = y ~ f1 * f2
random = ~ 1 | g
data = dd
control = list()
family = negative.binomial(theta = 0.53)
initial_values = NULL
na.action = na.exclude


